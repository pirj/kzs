@mixin switch-shared() {
  display: block;
  height: 26px;
  * {
    @include box-sizing(border-box);
  }

  a {
    display: block;

    @include transition(all 0.3s ease-out);
  }

  label,
  > span {
    line-height: 26px;
    vertical-align: middle;
  }

  /* Outline the toggles when the inputs are focused
   */
  input:focus ~ a,
  input:focus + label {
    outline: none;
  }

}

/* Checkbox
 */
@mixin switch-light() {

  @include switch-shared();

  position: relative;
  overflow: visible;
  padding: 0;

  /* Position the label over all the elements, except the slide-button (<a>)
   * Clicking anywhere on the label will change the switch-state
   */
  label {
    position: relative;
    z-index: 3;

    display: block;
    width: 100%;
  }

  /* Don't hide the input from screen-readers and keyboard access
   */
  input {
    position: absolute;
    opacity: 0;
    z-index: 5;

    &:checked ~ a {
      right: 0%;
    }

  }

  > span {
    position: absolute;
    left: -100px;

    width: 100%;
    margin: 0;
    padding-right: 100px;

    text-align: left;

    span {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 5;

      display: block;
      width: 50%;

      text-align: center;

      &:last-child {
        left: 50%;
      }
    }

  }

  a {
    position: absolute;
    right: 50%;
    top: 0;
    z-index: 4;

    display: block;
    width: 50%;
    height: 100%;
    padding: 0;
  }

}

/* Radio Switch
 */
@mixin switch-toggle() {

  @include switch-shared();

  position: relative;

  /* For callout panels in foundation
   */
  padding: 0 !important;

  input {
    position: absolute;
    opacity: 0;
  }

  input + label {
    position: relative;
    float: left;
    width: 50%;
    height: 100%;

    margin: 0;
    text-align: center;
  }

  a {
    position: absolute;
    top: 0;
    left: 0;
    padding: 0;
    z-index: 1;

    width: 50%;
    height: 100%;
  }

  input:last-of-type:checked ~ a {
    left: 50%;
  }

  /* Generate styles for the multiple states */
  @for $i from 1 through 3 {
    $state: $i + 2;
    $width: 100 / ($i + 2);

    &.switch-#{$state} {
      label,
      a {
        width: $width * 1%;
      }
    }

    @for $j from 2 through ($i + 1) {
      &.switch-#{$state} input:checked:nth-of-type(#{$j}) ~ a {
        left: $width * ($j - 1) * 1%;
      }
    }

    &.switch-#{$state} input:checked:last-of-type ~ a {
      left: 100 - $width * 1%;
    }
  }

}

/* Hide by default
 */
.switch-toggle a,
.switch-light span span {
  display: none;
}

/* We can't test for a specific feature,
 * so we only target browsers with support for media queries.
 */
@media only screen {

  /* Checkbox switch
   */
  .switch-light {
    @include switch-light();
  }

  /* Radio switch
   */
  .switch-toggle {
    @include switch-toggle();
  }

  /* Standalone Themes */
  $switch-max-width: 72px;

  .switch-candy {
    max-width: $switch-max-width;
    border-radius: 3px;
    color: #fff;
    font-weight: bold;
    text-align: center;
    position: relative;
    .switch-bg {
      content: '';
      padding: 0;
      background-color: lighten($color-gray-darker, 40%);
      border-radius: 30px;
      -webkit-transition: all 0.5s ease-out;
      -moz-transition: all 0.5s ease-out;
      transition: all 0.5s ease-out;
      z-index: -1;
    }
    .switch-text, .switch-text:before, .switch-text:after, .switch-bg {
      width: 100%;
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      max-width: $switch-max-width;
    }
    .switch-text:before, .switch-text:after {
      width: 100%;
      font-weight: bold;
      font-size: 12px;
      color:$color-gray-darker;
    }
    .switch-text:before,
    .switch-text:after
    {
      display: none;
    }
    .switch-text:before {
      content: 'НЕТ';
    }
    .switch-text:after {
      content: 'ДА';
      text-align: right;
    }
    label {
      color: #fff;
      @include transition(color 0.2s ease-out);
    }

    input:checked + label {
      color: #333;
      text-shadow: 0 1px 0 rgba(255,255,255,0.5);
    }

    a {
      border: 1px solid #333;
      background-color: #70c66b;
      border-radius: 3px;
    }

    > span {
      color: #333;

      text-shadow: none;
    }

    span {
      color: #fff;
    }

    &.switch-candy-blue a {
      background-color: #38a3d4;
    }

    &.switch-candy-yellow a {
      background-color: #f5e560;
    }
  }

  /* Android Theme
   */
  .switch-android {
    background-color: #464747;
    border-radius: 1px;

    color: #fff;

    label {
      color: #fff;
    }

    box-shadow: inset rgba(0, 0, 0, 0.1) 0 1px 0;

    > span span {
      opacity: 0;

      @include transition(all 0.1s);

      &:first-of-type {
        opacity: 1;
      }
    }

    a {
      background-color: #666;
      border-radius: 1px;

      box-shadow: inset rgba(255, 255, 255, 0.2) 0 1px 0,
      inset rgba(0, 0, 0, 0.3) 0 -1px 0;
    }

    /* Selected ON switch-light
     */
    &.switch-light input:checked {

      ~ a {
        background-color: #0E88B1;
      }

      ~ span span {
        &:first-of-type {
          opacity: 0;
        }

        &:last-of-type {
          opacity: 1;
        }
      }
    }
    &.switch-toggle,
    > span span {
      font-size: 85%;
      text-transform: uppercase;
    }
  }
}

.switch-light,
.switch-toggle {
  @media only screen and (-webkit-max-device-pixel-ratio: 2) and (max-device-width: 1280px) {
    -webkit-animation: webkitSiblingBugfix infinite 1s;
  }
}

@-webkit-keyframes webkitSiblingBugfix {
  from {
    -webkit-transform: translate3d(0,0,0);
  } to {
      -webkit-transform: translate3d(0,0,0);
    }
}


//VISUAL
/*
 * CSS TOGGLE SWITCHES */
.switch-toggle a, .switch-light span span {
  display: none; }
@media only screen {
  .switch-light {
    display: block;
    height: 26px;
    position: relative;
    overflow: visible;
    padding: 0;
  }
  .switch-light * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  .switch-light a {
    display: block;
    -webkit-transition: all 0.3s ease-out;
    -moz-transition: all 0.3s ease-out;
    transition: all 0.3s ease-out;
  }
  .switch-light label, .switch-light > span {
    line-height: 26px;
    vertical-align: middle;
  }
  .switch-light input:focus ~ a, .switch-light input:focus + label {
    outline: none;
  }
  .switch-light label {
    position: relative;
    z-index: 3;
    display: block;
    width: 100%;
  }
  .switch-light input {
    position: absolute;
    opacity: 0;
    z-index: 3;
  }
  .switch-light input:checked ~ a {
    right: 0%;
  }
  .switch-light > span {
    position: absolute;
    left: -100px;
    width: 100%;
    margin: 0;
    padding-right: 100px;
    text-align: left;
  }
  .switch-light > span span {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 5;
    display: block;
    width: 50%;
    text-align: center;
  }
  .switch-light > span span:last-child {
    left: 50%;
  }
  .switch-light a {
    position: absolute;
    right: 50%;
    top: 0;
    z-index: 4;
    display: block;
    width: 50%;
    height: 100%;
    padding: 0;
  }
  .switch-toggle {
    display: block;
    height: 26px;
    /* Outline the toggles when the inputs are focused
	 */
    position: relative;
    /* For callout panels in foundation
	 */
    padding: 0 !important;
    /* Generate styles for the multiple states */
  }
  .switch-toggle * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  .switch-toggle a {
    display: block;
    -webkit-transition: all 0.3s ease-out;
    -moz-transition: all 0.3s ease-out;
    transition: all 0.3s ease-out;
  }
  .switch-toggle label, .switch-toggle > span {
    line-height: 26px;
    vertical-align: middle;
  }
  .switch-toggle input {
    position: absolute;
    opacity: 0;
  }
  .switch-toggle input + label {
    position: relative;
    float: left;
    width: 50%;
    height: 100%;
    margin: 0;
    text-align: center;
  }
  .switch-toggle a {
    position: absolute;
    top: 0;
    left: 2px;
    padding: 0;
    z-index: 1;
    width: 50%;
    height: 100%;
  }
  .switch-toggle input:last-of-type:checked ~ a {
    left: 50%;
  }
  .switch-toggle.switch-3 label, .switch-toggle.switch-3 a {
    width: 33.33333%;
  }
  .switch-toggle.switch-3 input:checked:nth-of-type(2) ~ a {
    left: 33.33333%;
  }
  .switch-toggle.switch-3 input:checked:last-of-type ~ a {
    left: 66.66667%;
  }
  .switch-toggle.switch-4 label, .switch-toggle.switch-4 a {
    width: 25%;
  }
  .switch-toggle.switch-4 input:checked:nth-of-type(2) ~ a {
    left: 25%;
  }
  .switch-toggle.switch-4 input:checked:nth-of-type(3) ~ a {
    left: 50%;
  }
  .switch-toggle.switch-4 input:checked:last-of-type ~ a {
    left: 75%;
  }
  .switch-toggle.switch-5 label, .switch-toggle.switch-5 a {
    width: 20%;
  }
  .switch-toggle.switch-5 input:checked:nth-of-type(2) ~ a {
    left: 20%;
  }
  .switch-toggle.switch-5 input:checked:nth-of-type(3) ~ a {
    left: 40%;
  }
  .switch-toggle.switch-5 input:checked:nth-of-type(4) ~ a {
    left: 60%;
  }
  .switch-toggle.switch-5 input:checked:last-of-type ~ a {
    left: 80%;
  }
  .switch-candy {
    border-radius: 18px;
    color: white;
    font-weight: bold;
    text-align: center;
  }
  .switch-candy label {
    color: white;
    position: relative;
    z-index: 10;
    -webkit-transition: color 0.2s ease-out;
    -moz-transition: color 0.2s ease-out;
    transition: color 0.2s ease-out;
  }
  .switch-candy label:first-of-type,
  .switch-candy.switch-light #conform-undefined:checked ~ .switch-text:before {
    padding-left: 6px;
  }
  .switch-candy label:last-of-type,
  .switch-candy.switch-light #conform-undefined:checked ~ .switch-text:after {
    padding-right: 8px;
  }
  .switch-candy input:checked + label {
    color: #333333;
  }

  // switch change color & icons tumbler
  .switch-candy.switch-light #conform-yes:checked ~ a {
    @include fa-icon("\f00c", 12px);
    color: lighten($color-green-darker, 30%);
  }
  .switch-candy.switch-light #conform-no:checked ~ a {
    @include fa-icon("\f00d", 12px);
    color: lighten($color-red-darker, 30%);
  }
  .switch-candy.switch-light #conform-undefined:checked ~ a {
    display: none;
  }
  .switch-candy.switch-light #conform-yes:checked ~ .switch-text:after {
    padding-right: 20px;
    display: block;
    z-index: 4;
    color: #fff;
    text-align: center;
  }
  .switch-candy.switch-light #conform-no:checked ~ .switch-text:before {
    padding-left: 20px;
    display: block;
    z-index: 4;
    color: #fff;
    text-align: center;
  }
  .switch-candy.switch-light #conform-undefined:checked ~ .switch-text:before,
  .switch-candy.switch-light #conform-undefined:checked ~ .switch-text:after {
    display: block;
    z-index: 1;
  }

  .switch-candy.switch-light #conform-undefined + label {
    z-index: 1;
  }
  //  switch-bg change color
  .switch-candy.switch-light #conform-yes:checked ~ .switch-bg {
    background: lighten($color-green-darker, 30%);
  }
  .switch-candy.switch-light #conform-no:checked ~ .switch-bg {
    background: lighten($color-red-darker, 30%);
  }
  .switch-candy a {
    border: none;
    background: #fff;
    margin: 4px 3px;
    height: 100%;
    max-height: 18px;
    max-width: 18px;
    border-radius: 100%;
    line-height: 18px;
  }
  .switch-candy > span {
    color: #333333;
    text-shadow: none;
  }
}
